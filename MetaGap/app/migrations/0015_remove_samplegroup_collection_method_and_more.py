# Generated by Django 5.1.1 on 2025-10-08 15:25

from django.db import migrations


def migrate_sample_group_origin_forward(apps, schema_editor):
    SampleGroup = apps.get_model("app", "SampleGroup")
    SampleOrigin = apps.get_model("app", "SampleOrigin")

    for group in SampleGroup.objects.select_related("sample_origin").all():
        tissue = getattr(group, "tissue", None)
        collection_method = getattr(group, "collection_method", None)
        storage_conditions = getattr(group, "storage_conditions", None)

        values = {
            "tissue": tissue or None,
            "collection_method": collection_method or None,
            "storage_conditions": storage_conditions or None,
        }

        if not any(values.values()):
            continue

        origin = group.sample_origin
        created = False

        if origin is None:
            origin = SampleOrigin.objects.create(**values)
            created = True
        else:
            updated_fields = []
            for field, value in values.items():
                if value and not getattr(origin, field):
                    setattr(origin, field, value)
                    updated_fields.append(field)
            if updated_fields:
                origin.save(update_fields=updated_fields)

        if created:
            group.sample_origin = origin
            group.save(update_fields=["sample_origin"])


def migrate_sample_group_origin_backward(apps, schema_editor):
    SampleGroup = apps.get_model("app", "SampleGroup")

    for group in SampleGroup.objects.select_related("sample_origin").all():
        origin = group.sample_origin
        if origin is None:
            continue

        group.tissue = origin.tissue
        group.collection_method = origin.collection_method
        group.storage_conditions = origin.storage_conditions
        group.save(
            update_fields=[
                "tissue",
                "collection_method",
                "storage_conditions",
            ]
        )


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0014_bioinfoalignment_tool"),
    ]

    operations = [
        migrations.RunPython(
            migrate_sample_group_origin_forward,
            migrate_sample_group_origin_backward,
        ),
        migrations.RemoveField(
            model_name="samplegroup",
            name="collection_method",
        ),
        migrations.RemoveField(
            model_name="samplegroup",
            name="storage_conditions",
        ),
        migrations.RemoveField(
            model_name="samplegroup",
            name="tissue",
        ),
    ]

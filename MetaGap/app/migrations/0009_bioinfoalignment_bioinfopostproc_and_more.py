# Generated by Django 5.1.1 on 2025-02-05 17:54

import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0008_allelefrequency_qualitycontrolmetrics_samplegroup_and_more'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BioinfoAlignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software', models.CharField(blank=True, max_length=100, null=True)),
                ('params', models.CharField(blank=True, max_length=255, null=True)),
                ('ref_genome_version', models.CharField(blank=True, max_length=100, null=True)),
                ('recalibration_settings', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BioinfoPostProc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('normalization', models.CharField(blank=True, max_length=100, null=True)),
                ('harmonization', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BioinfoVariantCalling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tool', models.CharField(blank=True, max_length=100, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('filtering_thresholds', models.CharField(blank=True, max_length=255, null=True)),
                ('duplicate_handling', models.CharField(blank=True, max_length=50, null=True)),
                ('mq', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(blank=True, max_length=50, null=True)),
                ('adf', models.CharField(blank=True, max_length=50, null=True)),
                ('adr', models.CharField(blank=True, max_length=50, null=True)),
                ('dp', models.CharField(blank=True, max_length=50, null=True)),
                ('ec', models.CharField(blank=True, max_length=50, null=True)),
                ('ft', models.CharField(blank=True, max_length=50, null=True)),
                ('gl', models.CharField(blank=True, max_length=50, null=True)),
                ('gp', models.CharField(blank=True, max_length=50, null=True)),
                ('gq', models.CharField(blank=True, max_length=50, null=True)),
                ('gt', models.CharField(blank=True, max_length=50, null=True)),
                ('hq', models.CharField(blank=True, max_length=50, null=True)),
                ('mq', models.CharField(blank=True, max_length=50, null=True)),
                ('pl', models.CharField(blank=True, max_length=50, null=True)),
                ('pq', models.CharField(blank=True, max_length=50, null=True)),
                ('ps', models.CharField(blank=True, max_length=50, null=True)),
                ('additional', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenomeComplexity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('ploidy', models.CharField(blank=True, max_length=50, null=True)),
                ('gc_content', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IlluminaSeq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=100)),
                ('flow_cell', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('channel_method', models.CharField(blank=True, max_length=50, null=True)),
                ('cluster_density', models.CharField(blank=True, max_length=50, null=True)),
                ('qc_software', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aa', models.CharField(blank=True, max_length=50, null=True)),
                ('ac', models.CharField(blank=True, max_length=50, null=True)),
                ('af', models.CharField(blank=True, max_length=50, null=True)),
                ('an', models.CharField(blank=True, max_length=50, null=True)),
                ('bq', models.CharField(blank=True, max_length=50, null=True)),
                ('cigar', models.CharField(blank=True, max_length=50, null=True)),
                ('db', models.CharField(blank=True, max_length=50, null=True)),
                ('dp', models.CharField(blank=True, max_length=50, null=True)),
                ('end', models.CharField(blank=True, max_length=50, null=True)),
                ('h2', models.CharField(blank=True, max_length=50, null=True)),
                ('h3', models.CharField(blank=True, max_length=50, null=True)),
                ('mq', models.CharField(blank=True, max_length=50, null=True)),
                ('mq0', models.CharField(blank=True, max_length=50, null=True)),
                ('ns', models.CharField(blank=True, max_length=50, null=True)),
                ('sb', models.CharField(blank=True, max_length=50, null=True)),
                ('additional', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IonTorrentSeq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=100)),
                ('flow_cell', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('chip_type', models.CharField(blank=True, max_length=50, null=True)),
                ('ph_calibration', models.CharField(blank=True, max_length=50, null=True)),
                ('flow_order', models.CharField(blank=True, max_length=50, null=True)),
                ('ion_sphere_metrics', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryConstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kit', models.CharField(blank=True, max_length=100, null=True)),
                ('fragmentation', models.CharField(blank=True, max_length=100, null=True)),
                ('adapter_ligation_efficiency', models.CharField(blank=True, max_length=50, null=True)),
                ('pcr_cycles', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_type', models.CharField(blank=True, choices=[('DNA', 'DNA'), ('RNA', 'RNA'), ('cDNA', 'cDNA')], max_length=50, null=True)),
                ('integrity_number', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OntSeq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=100)),
                ('flow_cell', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('flow_cell_version', models.CharField(blank=True, max_length=50, null=True)),
                ('pore_type', models.CharField(blank=True, max_length=50, null=True)),
                ('bias_voltage', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PacBioSeq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=100)),
                ('flow_cell', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
                ('smrt_cell_type', models.CharField(blank=True, max_length=50, null=True)),
                ('zmw_density', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlatformIndependent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pooling', models.CharField(blank=True, max_length=100, null=True)),
                ('sequencing_kit', models.CharField(blank=True, max_length=100, null=True)),
                ('base_calling_alg', models.CharField(blank=True, max_length=100, null=True)),
                ('q30', models.CharField(blank=True, max_length=50, null=True)),
                ('normalized_coverage', models.CharField(blank=True, max_length=100, null=True)),
                ('run_specific_calibration', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceGenomeBuild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build_name', models.CharField(max_length=100)),
                ('build_version', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleOrigin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tissue', models.CharField(blank=True, max_length=100, null=True)),
                ('collection_method', models.CharField(blank=True, max_length=100, null=True)),
                ('storage_conditions', models.CharField(blank=True, max_length=100, null=True)),
                ('time_stored', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='absence_of_relatives',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='analysis_software',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='analysis_version',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='ancestry',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='contact_email',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='contact_phone',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='device_id',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='device_type',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='doi',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='exclusion_criteria',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='inclusion_criteria',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='is_transcriptome',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='phenotype',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='preparation_kit',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='preparation_method',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='sequencing_type',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='source_lab',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='species',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='storage_duration',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='storage_temperature',
        ),
        migrations.RemoveField(
            model_name='samplegroup',
            name='total_samples',
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='collection_method',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='storage_conditions',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='time_stored',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='bioinfo_alignment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.bioinfoalignment'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='bioinfo_post_proc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.bioinfopostproc'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='bioinfo_variant_calling',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.bioinfovariantcalling'),
        ),
        migrations.AddField(
            model_name='allelefrequency',
            name='format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.format'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='genome_complexity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.genomecomplexity'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='illumina_seq',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.illuminaseq'),
        ),
        migrations.AlterField(
            model_name='allelefrequency',
            name='info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.info'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='iontorrent_seq',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.iontorrentseq'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='library_construction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.libraryconstruction'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='material_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.materialtype'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='ont_seq',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ontseq'),
        ),
        migrations.AlterField(
            model_name='samplegroup',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.organization'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='pacbio_seq',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.pacbioseq'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='platform_independent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.platformindependent'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='reference_genome_build',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.referencegenomebuild'),
        ),
        migrations.AddField(
            model_name='samplegroup',
            name='sample_origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.sampleorigin'),
        ),
        migrations.DeleteModel(
            name='QualityControlMetrics',
        ),
    ]

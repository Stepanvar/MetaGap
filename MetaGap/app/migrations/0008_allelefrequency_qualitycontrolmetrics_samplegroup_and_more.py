# Generated by Django 5.1.1 on 2024-09-25 12:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0007_remove_common_gen_remove_common_phen_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AlleleFrequency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chrom", models.CharField(max_length=10)),
                ("pos", models.IntegerField()),
                ("variant_id", models.CharField(blank=True, max_length=100, null=True)),
                ("ref", models.CharField(max_length=50)),
                ("alt", models.CharField(max_length=50)),
                ("qual", models.FloatField(blank=True, null=True)),
                ("filter", models.CharField(blank=True, max_length=50, null=True)),
                ("info", models.JSONField()),
                ("comments", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="QualityControlMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dna_integrity", models.FloatField(blank=True, null=True)),
                ("rna_integrity", models.FloatField(blank=True, null=True)),
                (
                    "contamination_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "storage_conditions",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "extraction_yield",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "sample_purity",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "library_yield",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "fragment_size_distribution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "pcr_duplication_rate",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "phred_quality_score",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "percent_passing_filter",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "coverage_depth",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "base_calling_accuracy",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "per_base_sequence_quality",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "per_sequence_gc_content",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "mapping_quality",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "alignment_percentage",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "insert_size_distribution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "variant_call_quality",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "depth_of_coverage",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "genotype_quality",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SampleGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("doi", models.CharField(blank=True, max_length=100, null=True)),
                ("source_lab", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "device_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("device_id", models.CharField(blank=True, max_length=100, null=True)),
                ("tissue", models.CharField(blank=True, max_length=100, null=True)),
                ("species", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "storage_temperature",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "storage_duration",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("absence_of_relatives", models.BooleanField(default=False)),
                (
                    "preparation_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "preparation_kit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_transcriptome", models.BooleanField(default=False)),
                (
                    "sequencing_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "analysis_software",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "analysis_version",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("total_samples", models.IntegerField(blank=True, null=True)),
                ("phenotype", models.CharField(blank=True, max_length=255, null=True)),
                ("inclusion_criteria", models.TextField(blank=True, null=True)),
                ("exclusion_criteria", models.TextField(blank=True, null=True)),
                ("ancestry", models.CharField(blank=True, max_length=255, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="common",
            name="population_frequency",
        ),
        migrations.RemoveField(
            model_name="userdata",
            name="commons",
        ),
        migrations.DeleteModel(
            name="Genotype",
        ),
        migrations.RemoveField(
            model_name="userdata",
            name="user",
        ),
        migrations.AddField(
            model_name="qualitycontrolmetrics",
            name="sample_group",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="app.samplegroup"
            ),
        ),
        migrations.AddField(
            model_name="allelefrequency",
            name="sample_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.samplegroup"
            ),
        ),
        migrations.DeleteModel(
            name="PopulationFrequency",
        ),
        migrations.DeleteModel(
            name="Common",
        ),
        migrations.DeleteModel(
            name="UserData",
        ),
    ]
